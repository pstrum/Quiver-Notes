{
  "title": "Insertion Sort",
  "cells": [
    {
      "type": "markdown",
      "data": "## Insert element into sorted list \nGiven a sorted list with an unsorted number e in the rightmost cell, can you write some simple code to insert e into the array so that it remains sorted?\n\nPrint the array every time a value is shifted in the array until the array is fully sorted. The goal of this challenge is to follow the correct order of insertion sort.\n\n*Guideline*: You can copy the value of e to a variable and consider its cell \"empty\". Since this leaves an extra cell empty on the right, you can shift everything over until V can be inserted. This will create a duplicate of each value, but when you reach the right spot, you can replace it with e.\n\n## Input Format \nThere will be two lines of input:\n\nSize - the size of the array\nArr - the unsorted array of integers\n\n## Output Format \nOn each line, output the entire array every time an item is shifted in it.\n\n## Constraints \n1≤Size≤1000 \n−10000≤e≤10000,e∈Arr\n\n## Sample Input\n5\n2 4 6 8 3\n\n## Sample Output\n2 4 6 8 8 \n2 4 6 6 8 \n2 4 4 6 8 \n2 3 4 6 8 \n\n## Explanation\n3 is removed from the end of the array.\nIn the 1st line 8>3, so 8 is shifted one cell to the right. \nIn the 2nd line 6>3, so 6 is shifted one cell to the right. \nIn the 3rd line 4>3, so 4 is shifted one cell to the right. \nIn the 4th line 2<3, so 3 is placed at position 2.\n\n## Task\nComplete the method insertionSort which takes in one parameter:\n\nArr - an array with the value e in the right-most cell."
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "function processData(input) {\n  \"use strict\";\n  \n  var arr = input.split(/\\n| /);\n  arr.splice(0, 1);\n  \n  var e = Number(arr[arr.length - 1]);\n  \n  for (let i = arr.length - 1; i > 0; i--) {\n    \n    let previous = Number(arr[i - 1]);\n    \n    if (previous > e) {\n      arr[i] = previous;\n      let newString = arr.join(\" \");\n      console.log(newString);\n      if (i == 1) {\n        arr[0] = e;\n        let newString = arr.join(\" \");\n        console.log(newString);\n      }\n    } else if (previous <= e) {\n      arr[i] = e;\n      let newString = arr.join(\" \");\n      console.log(newString);\n      break;\n    }\n  }\n}"
    }
  ]
}